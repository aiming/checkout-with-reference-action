name: 'Checkout with reference'
description: 'Checkout source code with reference option'
inputs:
  github_token:
    description: 'GitHub token $github.token'
    default: ${{ github.token }}
    required: false
  github_actor:
    description: 'GitHub actor. $github.actor'
    default: ${{ github.actor }}
    required: false
  github_repository:
    description: 'GitHub repository. $github.repository'
    default: ${{ github.repository }}
    required: false
  branch_name:
    description: 'Specify branch_name for checking out'
    required: false
  sha:
    description: 'Specify commit sha for checking out(default: $github.sha)'
    required: false
  reference_dir:
    description: 'Reference repository directory.'
    required: true
  fetch_lfs:
    description: 'Clone with fetching LFS .'
    default: false
  checkout_dir:
    description: 'expoterd NFS directory with host ip address. ex:10.0.0.1:/exports'
    required: true
  depth:
    description: 'git clone --depth={} option'
    default: ''
  ignore_dubious_ownership:
    description: 'Not used(deprecated)'
    default: true
runs:
  using: "composite"
  steps:
    - shell: bash
      if: ${{ !env.ACT }}
      run: |
        set -xe

        export __SHA=${{ inputs.sha || github.sha }}
        if [ ! -z "${{ inputs.branch_name }}" ]; then
          # Remove "refs/heads/" at head if exists it
          __BRANCH=${{ inputs.branch_name }}
          __BRANCH=${__BRANCH#refs/heads/}

          # Override sha value if branch_name is presented.
          __SHA=$(/usr/bin/git ls-remote https://${{ inputs.github_actor }}:${{ inputs.github_token }}@github.com/${{ inputs.github_repository }}.git | grep -E  "\srefs/heads/${__BRANCH}$" | cut -f 1 )
        fi

        if ! ${{ inputs.fetch_lfs }}; then
          export GIT_LFS_SKIP_SMUDGE=1
        fi

        DEPTH=''
        if [ ! -z "${{ inputs.depth }}" ]; then
          DEPTH=--depth=${{ inputs.depth }}
        fi

        /usr/bin/git clone \
          $DEPTH \
          --reference-if-able=${{ inputs.reference_dir }} \
          https://${{ inputs.github_actor }}:${{ inputs.github_token }}@github.com/${{ inputs.github_repository }}.git \
          ${{ inputs.checkout_dir }}

        if [ $(git  config --global --get-all safe.directory | grep -c "$(pwd)$") -eq 0 ]; then
          /usr/bin/git config --global --add safe.directory $(pwd)
        fi

        pushd ${{ inputs.checkout_dir }}
          if [ ! -z "$__BRANCH" ]; then
            /usr/bin/git checkout -B $__BRANCH origin/$__BRANCH
          else
            /usr/bin/git fetch $DEPTH origin $__SHA
            /usr/bin/git reset --hard FETCH_HEAD
          fi

          /usr/bin/git config --local gc.auto 0

          /usr/bin/git config --local user.name "${GITHUB_ACTOR}"
          /usr/bin/git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        popd

        unset GIT_LFS_SKIP_SMUDGE
        unset __SHA
