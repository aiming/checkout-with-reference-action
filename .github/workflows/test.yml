name: Test checkout

on:
  push:

permissions:
  contents: read


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Check .gitconfig
        run: |
          if [ -f ~/.gitconfig ]; then
            cat ~/.gitconfig
          fi

      - name: Test default checkout
        uses: ./
        with:
          checkout_dir: step.default

      - name: Directory exists
        run: |
          if [ ! -d ./step.default ]; then
            echo '::error:: Should be able to be checked out'
            exit 1
          fi

      - name: Test checkout with branch_name as main
        uses: ./
        with:
          branch_name: main
          checkout_dir: step.branch_name

      - name: Directory exists
        run: |
          if [ ! -d ./step.branch_name ]; then
            echo '::error:: Should be able to be checked out'
            exit 1
          fi

      - name: Test checkout with branch_name as refs/heads/main
        uses: ./
        with:
          branch_name: refs/heads/main
          checkout_dir: step.long_branch_name

      - name: Directory exists
        run: |
          if [ ! -d ./step.long_branch_name ]; then
            echo '::error:: Should be able to be checked out'
            exit 1
          fi

      - name: Test checkout with branch_name as origin/main
        continue-on-error: true
        uses: ./
        with:
          branch_name: origin/main
          checkout_dir: step.branch_name_include_origin

      - name: Directory does not exists
        run: |
          if [ -d ./step.branch_name_include_origin ]; then
            echo '::error:: Should fail checking out'
            exit 1
          fi

      - name: Test checkout and no depth option
        uses: ./
        with:
          depth: ''
          checkout_dir: step.no_depth_option

      - name: Directory exists
        run: |
          if [ ! -d ./step.no_depth_option ]; then
            echo '::error:: Should be able to be checked out'
            exit 1
          fi

      - name: Test dont checkout when env.ACT is presented.
        uses: ./
        env:
          ACT: 1
        with:
          depth: ''
          checkout_dir: step.act_presented

      - name: Directory does not exist
        run: |
          if [ -d ./step.act_presented ]; then
            echo '::error:: Should not be able to be checked out, when ACT environment is exists'
            exit 1
          fi

      - name: Test Write author to .git/config
        uses: ./
        with:
          depth: ''
          checkout_dir: step.author

      - name: Have user.name and user.email on .git/config?
        run: |
          set -xe
          pwd
          ls -al
          pushd step.author
            if [ "${GITHUB_ACTOR}" != "$(git config --local --get user.name)" ]; then
              echo '::error:: "git config --local --get user.name" Should be equal' "$GITHUB_ACTOR"
              exit 1
            fi
            if [ "${GITHUB_ACTOR}@users.noreply.github.com" != "$(git config --local --get user.email)" ]; then
              echo '::error:: "git config --local --get user.email" Should be equal' "$GITHUB_ACTOR@users.noreply.github.com"
              exit 1
            fi
          popd

      - name: Check .gitconfig
        run: |
          cat ~/.gitconfig

      - name: Test do not retry if command successfull
        run: |
          source try.sh

          before=$(date +%s)
          try_till_success ls
          after=$(date +%s)

          # コマンド呼び出しに時間がかかっているかでリトライ判定をしています
          if [ $(($after - $before)) -gt 1 ]; then
            echo "::error:: 成功時にもリトライしています after = ${after}, before = ${before}"
            exit 1
          fi

      - name: Test do retry if command failure
        shell: bash +e -x {0}
        run: |
          source try.sh

          before=$(date +%s)
          try_till_success false
          after=$(date +%s)

          # コマンド呼び出しに時間がかかっているかでリトライ判定をしています
          if [ $(expr $after - $before) -lt 2 ]; then
            echo "::error:: 失敗時にリトライしていません after = ${after}, before = ${before}"
            exit 1
          fi

      - name: Test Write checkout dir to safe.dirctory on .gitconfig
        uses: ./
        with:
          depth: ''
          checkout_dir: step.checkout-dir

      - name: Have a current directory in safe.directory on .gitconfig
        run: |
          set -xe
          pwd
          SAFE_DIRECTORIES=$(git config --get-all safe.directory)
          EXPECT="$(pwd)/step.checkout-dir"

          FOUND=false
          for s in $SAFE_DIRECTORIES; do
            if [ "$s" = "$EXPECT" ]; then
              FOUND=true
            fi
          done

          if [ "$FOUND" = 'false' ]; then
            echo "::error:: safe.directory内に $EXPECT が見つかりません"
            echo "$SAFE_DIRECTORIES"
            exit 1
          fi

      - name: Setup github.com connection
        continue-on-error: true
        run: |
          # disable connect to github.com
          echo '127.0.0.1 github.com' | sudo tee -a /etc/hosts

      - name: Test retry checkout
        continue-on-error: true
        uses: ./
        with:
          depth: ''
          checkout_dir: step7
